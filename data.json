[
  {
    "data": {
      "title": "111BDD 기본 개념 및 기타 개념",
      "date": "2018-06-30T19:24:00.000Z",
      "catagory": "BDD",
      "tags": [
        "BDD",
        "TEST 코드",
        "Jasmine",
        "TDD"
      ]
    },
    "content": "1212122121\r\n# 1dss\r\nddd\r\ndsdasdsaddsd\r\nㄴㄴ\r\nsdasdsadsadsadsad\r\n\r\ndsdasd\r\ndddsd\r\n\r\n## 1-1. BDD 기본 개념d\r\n- Given : 초기 상황, \"어떤 버튼은\"\r\n- When : 어떤 이벤트가 발생, \"클릭하면\"\r\n- Then : 후속결과를 기대, \"결고창을 띄운다\"\r\n\r\n```js\r\ndescribe('어떤버튼은', function() {        // Given\r\n    describe('클릭했을떄', function() {     // When\r\n        it('경고창을 띄운다', function() {  // Then\r\n        });\r\n    });\r\n});\r\n```\r\n\r\n# 2-1. 테스트 더블이란 \r\n\r\n>  테스트하기 곤란한 컴포넌트를 대체하여 테스트하는것 \r\n\r\n특정한 동작을 흉내내어 테스트할때 사용한다.\r\n\r\n> 아래 5가지를 통칭하여 테스트 더블이라 한다.\r\n\r\n- 더미(dummy): 인자를 채우기 위해 사용\r\n- 스텁(stub) : 더미를 개선하여 실제 동작하게 만든것. 리턴값을 하드 코딩한다. \r\n- 스파이(spy) : 스텁과 유사학, 내부적으로 기록을 남기는 추가 기능\r\n- 페이크(fake) : 스텝에서 발전한 실제 코드\r\n- 목(mock): 더미, 스텁, 스파이를 혼합한 형태\r\n\r\n> 자스민에서는 테스트 더블을 스파이스(spies) 라고 한다.\r\n\r\n# 2. Jasmine 기본 사용법\r\n\r\n## 2-1.Basic\r\n\r\n### 기본적인 테스트\r\n\r\n```js\r\n// describe은 스펙 그룹을 생성한다. \r\n// describe은 중첩하여 사용 트리 형태로 사용가능가능하다.\r\ndescribe(\"A test\", function() { \r\n  it(\"should pass\", function() { // it은 하나의 스펙을 정의한다.\r\n    var passing = true;\r\n    expect(passing).toBe(true);\r\n  });\r\n);\r\n```\r\n\r\n### An expectation\r\n```js\r\nexpect(greatness).toBe(true);\r\n```\r\n\r\n### Before and After\r\n```js\r\ndescribe(\"before & after\", function() {\r\n  beforeEach(function() {\r\n    // describe 안에 정의된 각각의 스펙을 호출하기 전에 공유되는 세팅들을 준비한다.\r\n    // 여기서 미리 mocks, spies의 등을 세팅한다.\r\n  });\r\n  afterEach(function() {\r\n    // clean up\r\n    // 세팅한 것을 모두 해체 또는 제거한다\r\n  });\r\n});\r\n```\r\n\r\n## 2-1. Matchers\r\n\r\n```js\r\nexpect(obj).toBe(null);\t// Objects must be the same object\r\nexpect(obj).toEqual({id: 7});\t\r\nexpect(msg).toMatch(/abc/);\t// Tests a regular expression.\r\nexpect(obj).toBeDefined();\t\r\nexpect(obj).toBeUndefined();\t\r\nexpect('a').toBeTruthy();\t\r\nexpect(obj).toBeFalsy();\t// Falsy values: false, 0, \"\", null, undefined, NaN\r\nexpect(arr).toContain();\t// Find an item in an array.\r\nexpect(7).toBeLessThan(42);\t\r\nexpect(42).toBeGreaterThan(7);\t\r\nexpect(1.2).toBeCloseTo(1.23, 1); // \t2nd arg is decimal precision. 0 rounds.\r\nexpect(fn).toThrow();\t// Passes if fn throws an exception.\r\nexpect(obj).toThrowError(err);\t// Expect a specific error.\r\nexpect(obj).toBeNull();\r\n```\r\n\r\n\r\n## 3-1. Spy\r\n\r\n### spy 생성하기\r\n```js\r\nspyOn(obj, 'method');\r\njasmine.createSpy('optional name');\r\njasmine.createSpyObj('name',\r\n    ['fn1', 'fn2', ...]);\r\n```\r\n\r\n### spy 동작 수정하기\r\n```js\r\nobj.method.and.callThrough(); // spy 가 실행시에, 실제 구현된 부분을 호출되도록 한다.\r\nobj.method.and.returnValue(val); // spy 가 실행시에, 값을 반환되도록하낟.\r\nobj.method.and.callFake(fn); // spy 가 실행시에 가짜로 구현된 부분이 실행되도록한다.\r\nobj.method.and.throwError(err); // spy 가 실행시에 에러를 던지도록 한다. \r\nobj.method.and.stub(); // spy 가 어떤것도 하지 않도록 한다.\r\n```\r\n### Count/verify calls\r\n```js\r\nobj.method.calls.any(); // spy가 실행되었는지 확인한다.\r\nobj.method.calls.count(); // spy가 실행 횟수를 가져온다.\r\nobj.method.calls.reset(); // spy 가 호출 되지 않은 것처럼 리셋한다.\r\n```\r\n### Inspect calls\r\n```js\r\nobj.method.calls.first(); // 이 spy의 첫번째 실행에 대한 것을 가져온다.\r\nobj.method.calls.mostRecent(); // 이 spy의 최근 실행에 대한 것을 가져온다.\r\nobj.method.calls.all(); // 이 spy의 모든 실행에 대한 것을 가져온다.\r\n```\r\n### Call description object( spy 실행에 대한 결과로 리턴되는 형태)\r\n```js\r\n// 하나일 경우\r\n{\r\n object: {...}, // 'this' object\r\n args: []      // the arguments passed\r\n}\r\n// 여러개일 경우\r\n[\r\n  {\r\n    object: {...},  // 'this' object\r\n    args: [...]     // array of arguments\r\n  },  \r\n  ...               // one object for each call\r\n]\r\n```\r\n",
    "name": "BDD 개념 및 자스민 사용법.md",
    "path": "C:/PROJECT/ng-builder-markdown/markdown/BDD 개념 및 자스민 사용법/BDD 개념 및 자스민 사용법.md",
    "transData": "<p>1212122121</p>\n<h1>1dss</h1>\n<p>ddd\ndsdasdsaddsd\nㄴㄴ\nsdasdsadsadsadsad</p>\n<p>dsdasd\ndddsd</p>\n<h2>1-1. BDD 기본 개념d</h2>\n<ul>\n<li>Given : 초기 상황, \"어떤 버튼은\"</li>\n<li>When : 어떤 이벤트가 발생, \"클릭하면\"</li>\n<li>Then : 후속결과를 기대, \"결고창을 띄운다\"</li>\n</ul>\n<pre><code class=\"hljs language-js\">describe(<span class=\"hljs-string\">'어떤버튼은'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{        <span class=\"hljs-comment\">// Given</span>\n    describe(<span class=\"hljs-string\">'클릭했을떄'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{     <span class=\"hljs-comment\">// When</span>\n        it(<span class=\"hljs-string\">'경고창을 띄운다'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{  <span class=\"hljs-comment\">// Then</span>\n        });\n    });\n});</code></pre>\n<h1>2-1. 테스트 더블이란</h1>\n<blockquote>\n<p> 테스트하기 곤란한 컴포넌트를 대체하여 테스트하는것 </p>\n</blockquote>\n<p>특정한 동작을 흉내내어 테스트할때 사용한다.</p>\n<blockquote>\n<p>아래 5가지를 통칭하여 테스트 더블이라 한다.</p>\n</blockquote>\n<ul>\n<li>더미(dummy): 인자를 채우기 위해 사용</li>\n<li>스텁(stub) : 더미를 개선하여 실제 동작하게 만든것. 리턴값을 하드 코딩한다. </li>\n<li>스파이(spy) : 스텁과 유사학, 내부적으로 기록을 남기는 추가 기능</li>\n<li>페이크(fake) : 스텝에서 발전한 실제 코드</li>\n<li>목(mock): 더미, 스텁, 스파이를 혼합한 형태</li>\n</ul>\n<blockquote>\n<p>자스민에서는 테스트 더블을 스파이스(spies) 라고 한다.</p>\n</blockquote>\n<h1>2. Jasmine 기본 사용법</h1>\n<h2>2-1.Basic</h2>\n<h3>기본적인 테스트</h3>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// describe은 스펙 그룹을 생성한다. </span>\n<span class=\"hljs-comment\">// describe은 중첩하여 사용 트리 형태로 사용가능가능하다.</span>\ndescribe(<span class=\"hljs-string\">\"A test\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{ \n  it(<span class=\"hljs-string\">\"should pass\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{ <span class=\"hljs-comment\">// it은 하나의 스펙을 정의한다.</span>\n    <span class=\"hljs-keyword\">var</span> passing = <span class=\"hljs-literal\">true</span>;\n    expect(passing).toBe(<span class=\"hljs-literal\">true</span>);\n  });\n);</code></pre>\n<h3>An expectation</h3>\n<pre><code class=\"hljs language-js\">expect(greatness).toBe(<span class=\"hljs-literal\">true</span>);</code></pre>\n<h3>Before and After</h3>\n<pre><code class=\"hljs language-js\">describe(<span class=\"hljs-string\">\"before &#x26; after\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n  beforeEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-comment\">// describe 안에 정의된 각각의 스펙을 호출하기 전에 공유되는 세팅들을 준비한다.</span>\n    <span class=\"hljs-comment\">// 여기서 미리 mocks, spies의 등을 세팅한다.</span>\n  });\n  afterEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-comment\">// clean up</span>\n    <span class=\"hljs-comment\">// 세팅한 것을 모두 해체 또는 제거한다</span>\n  });\n});</code></pre>\n<h2>2-1. Matchers</h2>\n<pre><code class=\"hljs language-js\">expect(obj).toBe(<span class=\"hljs-literal\">null</span>);\t<span class=\"hljs-comment\">// Objects must be the same object</span>\nexpect(obj).toEqual({<span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">7</span>});\t\nexpect(msg).toMatch(<span class=\"hljs-regexp\">/abc/</span>);\t<span class=\"hljs-comment\">// Tests a regular expression.</span>\nexpect(obj).toBeDefined();\t\nexpect(obj).toBeUndefined();\t\nexpect(<span class=\"hljs-string\">'a'</span>).toBeTruthy();\t\nexpect(obj).toBeFalsy();\t<span class=\"hljs-comment\">// Falsy values: false, 0, \"\", null, undefined, NaN</span>\nexpect(arr).toContain();\t<span class=\"hljs-comment\">// Find an item in an array.</span>\nexpect(<span class=\"hljs-number\">7</span>).toBeLessThan(<span class=\"hljs-number\">42</span>);\t\nexpect(<span class=\"hljs-number\">42</span>).toBeGreaterThan(<span class=\"hljs-number\">7</span>);\t\nexpect(<span class=\"hljs-number\">1.2</span>).toBeCloseTo(<span class=\"hljs-number\">1.23</span>, <span class=\"hljs-number\">1</span>); <span class=\"hljs-comment\">// \t2nd arg is decimal precision. 0 rounds.</span>\nexpect(fn).toThrow();\t<span class=\"hljs-comment\">// Passes if fn throws an exception.</span>\nexpect(obj).toThrowError(err);\t<span class=\"hljs-comment\">// Expect a specific error.</span>\nexpect(obj).toBeNull();</code></pre>\n<h2>3-1. Spy</h2>\n<h3>spy 생성하기</h3>\n<pre><code class=\"hljs language-js\">spyOn(obj, <span class=\"hljs-string\">'method'</span>);\njasmine.createSpy(<span class=\"hljs-string\">'optional name'</span>);\njasmine.createSpyObj(<span class=\"hljs-string\">'name'</span>,\n    [<span class=\"hljs-string\">'fn1'</span>, <span class=\"hljs-string\">'fn2'</span>, ...]);</code></pre>\n<h3>spy 동작 수정하기</h3>\n<pre><code class=\"hljs language-js\">obj.method.and.callThrough(); <span class=\"hljs-comment\">// spy 가 실행시에, 실제 구현된 부분을 호출되도록 한다.</span>\nobj.method.and.returnValue(val); <span class=\"hljs-comment\">// spy 가 실행시에, 값을 반환되도록하낟.</span>\nobj.method.and.callFake(fn); <span class=\"hljs-comment\">// spy 가 실행시에 가짜로 구현된 부분이 실행되도록한다.</span>\nobj.method.and.throwError(err); <span class=\"hljs-comment\">// spy 가 실행시에 에러를 던지도록 한다. </span>\nobj.method.and.stub(); <span class=\"hljs-comment\">// spy 가 어떤것도 하지 않도록 한다.</span></code></pre>\n<h3>Count/verify calls</h3>\n<pre><code class=\"hljs language-js\">obj.method.calls.any(); <span class=\"hljs-comment\">// spy가 실행되었는지 확인한다.</span>\nobj.method.calls.count(); <span class=\"hljs-comment\">// spy가 실행 횟수를 가져온다.</span>\nobj.method.calls.reset(); <span class=\"hljs-comment\">// spy 가 호출 되지 않은 것처럼 리셋한다.</span></code></pre>\n<h3>Inspect calls</h3>\n<pre><code class=\"hljs language-js\">obj.method.calls.first(); <span class=\"hljs-comment\">// 이 spy의 첫번째 실행에 대한 것을 가져온다.</span>\nobj.method.calls.mostRecent(); <span class=\"hljs-comment\">// 이 spy의 최근 실행에 대한 것을 가져온다.</span>\nobj.method.calls.all(); <span class=\"hljs-comment\">// 이 spy의 모든 실행에 대한 것을 가져온다.</span></code></pre>\n<h3>Call description object( spy 실행에 대한 결과로 리턴되는 형태)</h3>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 하나일 경우</span>\n{\n <span class=\"hljs-attr\">object</span>: {...}, <span class=\"hljs-comment\">// 'this' object</span>\n <span class=\"hljs-attr\">args</span>: []      <span class=\"hljs-comment\">// the arguments passed</span>\n}\n<span class=\"hljs-comment\">// 여러개일 경우</span>\n[\n  {\n    <span class=\"hljs-attr\">object</span>: {...},  <span class=\"hljs-comment\">// 'this' object</span>\n    <span class=\"hljs-attr\">args</span>: [...]     <span class=\"hljs-comment\">// array of arguments</span>\n  },  \n  ...               <span class=\"hljs-comment\">// one object for each call</span>\n]</code></pre>\n"
  },
  {
    "data": {
      "title": "Angular Cli를 기능을 활용하여 라이브러리 만들기-2",
      "date": "2019-02-21T11:37:00.000Z",
      "category": "Angular",
      "tags": [
        "Angular",
        "library"
      ]
    },
    "content": "\r\n# Angular Cli를 기능을 활용하여 라이브러리 만들기-2\r\n\r\n[https://byeonggi.github.io/blog/angular-cli%EB%A5%BC-%EA%B8%B0%EB%8A%A5%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0-2](https://byeonggi.github.io/blog/angular-cli%EB%A5%BC-%EA%B8%B0%EB%8A%A5%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0-2)\r\n\r\n```bash\r\n\"scripts\": {\r\n    \"build_lib\": \"ng build bengis-ui\",\r\n    \"npm_pack\": \"cd dist/bengis-ui && npm pack\",\r\n    \"package\": \"npm run build_lib && npm run npm_pack\",\r\n},\r\n```\r\n\r\n```bash\r\nnpm run build_lib\r\n\r\n> bengis-lib@0.0.0 build_lib /home/kira/PROJECT/angular-experimental/bengis-lib\r\n> ng build bengis-ui\r\n\r\nBuilding Angular Package\r\nBuilding entry point 'bengis-ui'\r\nCompiling TypeScript sources through ngc\r\nBundling to FESM2015\r\nBundling to FESM5\r\nBundling to UMD\r\nMinifying UMD bundle\r\nCopying declaration files\r\nWriting package metadata\r\nRemoving scripts section in package.json as it's considered a potential security vulnerability.\r\nBuilt bengis-ui\r\nBuilt Angular Package!\r\n  - from: /home/kira/PROJECT/angular-experimental/bengis-lib/projects/bengis-ui\r\n  - to:   /home/kira/PROJECT/angular-experimental/bengis-lib/dist/bengis-ui\r\n\r\nnpm run npm_pack\r\n\r\n> bengis-lib@0.0.0 npm_pack /home/kira/PROJECT/angular-experimental/bengis-lib\r\n> cd dist/bengis-ui && npm pack\r\n\r\nnpm notice \r\nnpm notice 📦  bengis-ui@0.0.1\r\nnpm notice === Tarball Contents === \r\nnpm notice 532B  package.json                      \r\nnpm notice 78B   bengis-ui.d.ts                    \r\nnpm notice 1.3kB bengis-ui.metadata.json           \r\nnpm notice 124B  public_api.d.ts                   \r\nnpm notice 1.0kB README.md                         \r\nnpm notice 3.2kB bundles/bengis-ui.umd.js          \r\nnpm notice 1.4kB bundles/bengis-ui.umd.js.map      \r\nnpm notice 1.0kB bundles/bengis-ui.umd.min.js      \r\nnpm notice 1.4kB bundles/bengis-ui.umd.min.js.map  \r\nnpm notice 676B  esm2015/bengis-ui.js              \r\nnpm notice 1.5kB esm2015/lib/bengis-ui.component.js\r\nnpm notice 1.4kB esm2015/lib/bengis-ui.module.js   \r\nnpm notice 1.3kB esm2015/lib/bengis-ui.service.js  \r\nnpm notice 954B  esm2015/public_api.js             \r\nnpm notice 676B  esm5/bengis-ui.js                 \r\nnpm notice 1.8kB esm5/lib/bengis-ui.component.js   \r\nnpm notice 1.6kB esm5/lib/bengis-ui.module.js      \r\nnpm notice 1.5kB esm5/lib/bengis-ui.service.js     \r\nnpm notice 954B  esm5/public_api.js                \r\nnpm notice 2.0kB fesm2015/bengis-ui.js             \r\nnpm notice 1.3kB fesm2015/bengis-ui.js.map         \r\nnpm notice 2.5kB fesm5/bengis-ui.js                \r\nnpm notice 1.3kB fesm5/bengis-ui.js.map            \r\nnpm notice 142B  lib/bengis-ui.component.d.ts      \r\nnpm notice 40B   lib/bengis-ui.module.d.ts         \r\nnpm notice 60B   lib/bengis-ui.service.d.ts        \r\nnpm notice === Tarball Details === \r\nnpm notice name:          bengis-ui                               \r\nnpm notice version:       0.0.1                                   \r\nnpm notice filename:      bengis-ui-0.0.1.tgz                     \r\nnpm notice package size:  6.7 kB                                  \r\nnpm notice unpacked size: 29.9 kB                                 \r\nnpm notice shasum:        16ed29218c61de3c397370a169d895ead7ba54f0\r\nnpm notice integrity:     sha512-9MXxrP4NJbT/B[...]wevv3IGGooEDw==\r\nnpm notice total files:   26                                      \r\nnpm notice \r\nbengis-ui-0.0.1.tgz\r\n```    \r\n\r\n![/assets/2019-02-21-Angular-Cli-Library02/angular-build-packaging.png](/assets/2019-02-21-Angular-Cli-Library02/angular-build-packaging.png)\r\n\r\n```bash\r\nnpm install ./bengis-ui-0.0.1.tgz\r\n\r\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.7 (node_modules/fsevents):\r\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.7: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"linux\",\"arch\":\"x64\"})\r\n\r\n+ bengis-ui@0.0.1\r\nadded 1 package and audited 42430 packages in 23.592s\r\nfound 1 low severity vulnerability\r\n  run `npm audit fix` to fix them, or `npm audit` for details\r\n```\r\n\r\n![/assets/2019-02-21-Angular-Cli-Library02/angular-lib-install.png](/assets/2019-02-21-Angular-Cli-Library02/angular-lib-install.png)\r\n\r\n```ts\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { BengisUiModule } from 'bengis-ui';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BengisUiModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n```\r\n```html\r\n<bengis-bengis-ui></bengis-bengis-ui>\r\n```",
    "name": "index.md",
    "path": "C:/PROJECT/ng-builder-markdown/markdown/2019-02-21-Angular-Cli-Library02/index.md",
    "transData": "<h1>Angular Cli를 기능을 활용하여 라이브러리 만들기-2</h1>\n<p><a href=\"https://byeonggi.github.io/blog/angular-cli%EB%A5%BC-%EA%B8%B0%EB%8A%A5%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0-2\">https://byeonggi.github.io/blog/angular-cli%EB%A5%BC-%EA%B8%B0%EB%8A%A5%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0-2</a></p>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-string\">\"scripts\"</span>: {\n    <span class=\"hljs-string\">\"build_lib\"</span>: <span class=\"hljs-string\">\"ng build bengis-ui\"</span>,\n    <span class=\"hljs-string\">\"npm_pack\"</span>: <span class=\"hljs-string\">\"cd dist/bengis-ui &#x26;&#x26; npm pack\"</span>,\n    <span class=\"hljs-string\">\"package\"</span>: <span class=\"hljs-string\">\"npm run build_lib &#x26;&#x26; npm run npm_pack\"</span>,\n},</code></pre>\n<pre><code class=\"hljs language-bash\">npm run build_lib\n\n> bengis-lib@0.0.0 build_lib /home/kira/PROJECT/angular-experimental/bengis-lib\n> ng build bengis-ui\n\nBuilding Angular Package\nBuilding entry point <span class=\"hljs-string\">'bengis-ui'</span>\nCompiling TypeScript sources through ngc\nBundling to FESM2015\nBundling to FESM5\nBundling to UMD\nMinifying UMD bundle\nCopying declaration files\nWriting package metadata\nRemoving scripts section <span class=\"hljs-keyword\">in</span> package.json as it<span class=\"hljs-string\">'s considered a potential security vulnerability.\nBuilt bengis-ui\nBuilt Angular Package!\n  - from: /home/kira/PROJECT/angular-experimental/bengis-lib/projects/bengis-ui\n  - to:   /home/kira/PROJECT/angular-experimental/bengis-lib/dist/bengis-ui\n\nnpm run npm_pack\n\n> bengis-lib@0.0.0 npm_pack /home/kira/PROJECT/angular-experimental/bengis-lib\n> cd dist/bengis-ui &#x26;&#x26; npm pack\n\nnpm notice \nnpm notice 📦  bengis-ui@0.0.1\nnpm notice === Tarball Contents === \nnpm notice 532B  package.json                      \nnpm notice 78B   bengis-ui.d.ts                    \nnpm notice 1.3kB bengis-ui.metadata.json           \nnpm notice 124B  public_api.d.ts                   \nnpm notice 1.0kB README.md                         \nnpm notice 3.2kB bundles/bengis-ui.umd.js          \nnpm notice 1.4kB bundles/bengis-ui.umd.js.map      \nnpm notice 1.0kB bundles/bengis-ui.umd.min.js      \nnpm notice 1.4kB bundles/bengis-ui.umd.min.js.map  \nnpm notice 676B  esm2015/bengis-ui.js              \nnpm notice 1.5kB esm2015/lib/bengis-ui.component.js\nnpm notice 1.4kB esm2015/lib/bengis-ui.module.js   \nnpm notice 1.3kB esm2015/lib/bengis-ui.service.js  \nnpm notice 954B  esm2015/public_api.js             \nnpm notice 676B  esm5/bengis-ui.js                 \nnpm notice 1.8kB esm5/lib/bengis-ui.component.js   \nnpm notice 1.6kB esm5/lib/bengis-ui.module.js      \nnpm notice 1.5kB esm5/lib/bengis-ui.service.js     \nnpm notice 954B  esm5/public_api.js                \nnpm notice 2.0kB fesm2015/bengis-ui.js             \nnpm notice 1.3kB fesm2015/bengis-ui.js.map         \nnpm notice 2.5kB fesm5/bengis-ui.js                \nnpm notice 1.3kB fesm5/bengis-ui.js.map            \nnpm notice 142B  lib/bengis-ui.component.d.ts      \nnpm notice 40B   lib/bengis-ui.module.d.ts         \nnpm notice 60B   lib/bengis-ui.service.d.ts        \nnpm notice === Tarball Details === \nnpm notice name:          bengis-ui                               \nnpm notice version:       0.0.1                                   \nnpm notice filename:      bengis-ui-0.0.1.tgz                     \nnpm notice package size:  6.7 kB                                  \nnpm notice unpacked size: 29.9 kB                                 \nnpm notice shasum:        16ed29218c61de3c397370a169d895ead7ba54f0\nnpm notice integrity:     sha512-9MXxrP4NJbT/B[...]wevv3IGGooEDw==\nnpm notice total files:   26                                      \nnpm notice \nbengis-ui-0.0.1.tgz</span></code></pre>\n<p><img src=\"/assets/2019-02-21-Angular-Cli-Library02/angular-build-packaging.png\" alt=\"/assets/2019-02-21-Angular-Cli-Library02/angular-build-packaging.png\"></p>\n<pre><code class=\"hljs language-bash\">npm install ./bengis-ui-0.0.1.tgz\n\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.7 (node_modules/fsevents):\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform <span class=\"hljs-keyword\">for</span> fsevents@1.2.7: wanted {<span class=\"hljs-string\">\"os\"</span>:<span class=\"hljs-string\">\"darwin\"</span>,<span class=\"hljs-string\">\"arch\"</span>:<span class=\"hljs-string\">\"any\"</span>} (current: {<span class=\"hljs-string\">\"os\"</span>:<span class=\"hljs-string\">\"linux\"</span>,<span class=\"hljs-string\">\"arch\"</span>:<span class=\"hljs-string\">\"x64\"</span>})\n\n+ bengis-ui@0.0.1\nadded 1 package and audited 42430 packages <span class=\"hljs-keyword\">in</span> 23.592s\nfound 1 low severity vulnerability\n  run `npm audit fix` to fix them, or `npm audit` <span class=\"hljs-keyword\">for</span> details</code></pre>\n<p><img src=\"/assets/2019-02-21-Angular-Cli-Library02/angular-lib-install.png\" alt=\"/assets/2019-02-21-Angular-Cli-Library02/angular-lib-install.png\"></p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">import</span> { BrowserModule } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/platform-browser'</span>;\n<span class=\"hljs-keyword\">import</span> { NgModule } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@angular/core'</span>;\n\n<span class=\"hljs-keyword\">import</span> { AppRoutingModule } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./app-routing.module'</span>;\n<span class=\"hljs-keyword\">import</span> { AppComponent } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./app.component'</span>;\n\n<span class=\"hljs-keyword\">import</span> { BengisUiModule } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'bengis-ui'</span>;\n\n<span class=\"hljs-meta\">@NgModule</span>({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BengisUiModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> AppModule { }</code></pre>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">bengis-bengis-ui</span>></span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">bengis-bengis-ui</span>></span></code></pre>\n"
  },
  {
    "data": {
      "title": "Angular Cli를 기능을 활용하여 라이브러리 만들기-1",
      "date": "2019-02-21T10:37:00.000Z",
      "category": "Angular",
      "tags": [
        "Angular",
        "library"
      ]
    },
    "content": "\r\n# Angular Cli를 기능을 활용하여 라이브러리 만들기-122121s\r\n\r\n[https://byeonggi.github.io/blog/angular-cli%EB%A5%BC-%EA%B8%B0%EB%8A%A5%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0-1](https://byeonggi.github.io/blog/angular-cli%EB%A5%BC-%EA%B8%B0%EB%8A%A5%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0-1)\r\nd111\r\n\r\n- Angular library Project 를 생성 합니다.\r\n- createApplication flag는 기본적으로 true이며, 일반적인 최초 app 프로젝트 생성시 이 flag가 활성화되어 생성된다.([참고](https://angular.io/cli/new))\r\n\r\n    ng new [project Name] --createApplication=false\r\n\r\n- src 폴더 안에 새로운 초기화된 app 프로젝트가 생성된다.\r\n\r\n![angular-standard-project.png](/assets/2019-02-21-Angular-Cli-Library01/angular-standard-project.png)\r\n\r\n- 초기화 안된 app 프로젝트 형태 빈 workspace 생성된다.\r\n- projects 폴더안에서 app들을 생성하기 위해서는 `ng generate application` 명령을 사용 해서 만들수 있다.\r\n- 모든 생성된 app 들을 projects 폴더 아래에서 생성된다.\r\n\r\n![augular-muti-apps.png](/assets/2019-02-21-Angular-Cli-Library01/augular-muti-apps.png)\r\n\r\n- library 용 project 생성\r\n- ng new [project name] --create-application=false\r\n\r\n```bash\r\nng new bengis-lib --create-application=false\r\n\r\n? Would you like to add Angular routing? Yes\r\n? Which stylesheet format would you like to use? Sass   [ http://sass-lang.com   ]\r\nCREATE bengis-lib/README.md (1026 bytes)\r\nCREATE bengis-lib/.editorconfig (246 bytes)\r\nCREATE bengis-lib/.gitignore (587 bytes)\r\nCREATE bengis-lib/angular.json (135 bytes)\r\nCREATE bengis-lib/package.json (1261 bytes)\r\nCREATE bengis-lib/tsconfig.json (435 bytes)\r\nCREATE bengis-lib/tslint.json (1621 bytes)\r\n```\r\n\r\n![angular-project-lib-001.png](/assets/2019-02-21-Angular-Cli-Library01/angular-project-lib-001.png)\r\n\r\n```bash\r\nng generate library bengis-ui --prefix=bengis\r\n\r\nCREATE projects/bengis-ui/README.md (1010 bytes)\r\nCREATE projects/bengis-ui/karma.conf.js (1009 bytes)\r\nCREATE projects/bengis-ui/ng-package.json (158 bytes)\r\nCREATE projects/bengis-ui/package.json (139 bytes)\r\nCREATE projects/bengis-ui/tsconfig.lib.json (726 bytes)\r\nCREATE projects/bengis-ui/tsconfig.spec.json (246 bytes)\r\nCREATE projects/bengis-ui/tslint.json (253 bytes)\r\nCREATE projects/bengis-ui/src/public_api.ts (167 bytes)\r\nCREATE projects/bengis-ui/src/test.ts (700 bytes)\r\nCREATE projects/bengis-ui/src/lib/bengis-ui.module.ts (235 bytes)\r\nCREATE projects/bengis-ui/src/lib/bengis-ui.component.spec.ts (643 bytes)\r\nCREATE projects/bengis-ui/src/lib/bengis-ui.component.ts (267 bytes)\r\nCREATE projects/bengis-ui/src/lib/bengis-ui.service.spec.ts (344 bytes)\r\nCREATE projects/bengis-ui/src/lib/bengis-ui.service.ts (137 bytes)\r\nUPDATE angular.json (1269 bytes)\r\nUPDATE package.json (1438 bytes)\r\nUPDATE tsconfig.json (569 bytes)\r\n```\r\n\r\n![angular-project-lib-002.png](/assets/2019-02-21-Angular-Cli-Library01/angular-project-lib-002.png)\r\n\r\n- `ng generate application`로 프로젝트를 생성하면 app 프로젝트와 e2e 테스트가 자동으로 생성된다.\r\n\r\n```bash\r\nng generate application bengis-ui-tester\r\n\r\nCREATE projects/bengis-ui-tester/src/favicon.ico (5430 bytes)\r\nCREATE projects/bengis-ui-tester/src/index.html (301 bytes)\r\nCREATE projects/bengis-ui-tester/src/main.ts (372 bytes)\r\nCREATE projects/bengis-ui-tester/src/polyfills.ts (2841 bytes)\r\nCREATE projects/bengis-ui-tester/src/styles.css (80 bytes)\r\nCREATE projects/bengis-ui-tester/src/test.ts (642 bytes)\r\nCREATE projects/bengis-ui-tester/src/assets/.gitkeep (0 bytes)\r\nCREATE projects/bengis-ui-tester/src/environments/environment.prod.ts (51 bytes)\r\nCREATE projects/bengis-ui-tester/src/environments/environment.ts (662 bytes)\r\nCREATE projects/bengis-ui-tester/browserslist (388 bytes)\r\nCREATE projects/bengis-ui-tester/karma.conf.js (1032 bytes)\r\nCREATE projects/bengis-ui-tester/tsconfig.app.json (172 bytes)\r\nCREATE projects/bengis-ui-tester/tsconfig.spec.json (270 bytes)\r\nCREATE projects/bengis-ui-tester/tslint.json (317 bytes)\r\nCREATE projects/bengis-ui-tester/src/app/app.module.ts (314 bytes)\r\nCREATE projects/bengis-ui-tester/src/app/app.component.css (0 bytes)\r\nCREATE projects/bengis-ui-tester/src/app/app.component.html (1120 bytes)\r\nCREATE projects/bengis-ui-tester/src/app/app.component.spec.ts (1008 bytes)\r\nCREATE projects/bengis-ui-tester/src/app/app.component.ts (220 bytes)\r\nCREATE projects/bengis-ui-tester-e2e/protractor.conf.js (752 bytes)\r\nCREATE projects/bengis-ui-tester-e2e/tsconfig.e2e.json (219 bytes)\r\nCREATE projects/bengis-ui-tester-e2e/src/app.e2e-spec.ts (645 bytes)\r\nCREATE projects/bengis-ui-tester-e2e/src/app.po.ts (251 bytes)\r\nUPDATE angular.json (5567 bytes)\r\nUPDATE package.json (1438 bytes)\r\n```\r\n\r\n![angular-project-lib-003.png](/assets/2019-02-21-Angular-Cli-Library01/angular-project-lib-003.png)\r\n\r\n> 참고\r\n",
    "name": "index.md",
    "path": "C:/PROJECT/ng-builder-markdown/markdown/2019-02-21-Angular-Cli-Library01/index.md",
    "transData": "<h1>Angular Cli를 기능을 활용하여 라이브러리 만들기-122121s</h1>\n<p><a href=\"https://byeonggi.github.io/blog/angular-cli%EB%A5%BC-%EA%B8%B0%EB%8A%A5%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0-1\">https://byeonggi.github.io/blog/angular-cli%EB%A5%BC-%EA%B8%B0%EB%8A%A5%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0-1</a>\nd111</p>\n<ul>\n<li>\n<p>Angular library Project 를 생성 합니다.</p>\n</li>\n<li>\n<p>createApplication flag는 기본적으로 true이며, 일반적인 최초 app 프로젝트 생성시 이 flag가 활성화되어 생성된다.(<a href=\"https://angular.io/cli/new\">참고</a>)</p>\n<p>  ng new [project Name] --createApplication=false</p>\n</li>\n<li>\n<p>src 폴더 안에 새로운 초기화된 app 프로젝트가 생성된다.</p>\n</li>\n</ul>\n<p><img src=\"/assets/2019-02-21-Angular-Cli-Library01/angular-standard-project.png\" alt=\"angular-standard-project.png\"></p>\n<ul>\n<li>초기화 안된 app 프로젝트 형태 빈 workspace 생성된다.</li>\n<li>projects 폴더안에서 app들을 생성하기 위해서는 <code>ng generate application</code> 명령을 사용 해서 만들수 있다.</li>\n<li>모든 생성된 app 들을 projects 폴더 아래에서 생성된다.</li>\n</ul>\n<p><img src=\"/assets/2019-02-21-Angular-Cli-Library01/augular-muti-apps.png\" alt=\"augular-muti-apps.png\"></p>\n<ul>\n<li>library 용 project 생성</li>\n<li>ng new [project name] --create-application=false</li>\n</ul>\n<pre><code class=\"hljs language-bash\">ng new bengis-lib --create-application=<span class=\"hljs-literal\">false</span>\n\n? Would you like to add Angular routing? Yes\n? Which stylesheet format would you like to use? Sass   [ http://sass-lang.com   ]\nCREATE bengis-lib/README.md (1026 bytes)\nCREATE bengis-lib/.editorconfig (246 bytes)\nCREATE bengis-lib/.gitignore (587 bytes)\nCREATE bengis-lib/angular.json (135 bytes)\nCREATE bengis-lib/package.json (1261 bytes)\nCREATE bengis-lib/tsconfig.json (435 bytes)\nCREATE bengis-lib/tslint.json (1621 bytes)</code></pre>\n<p><img src=\"/assets/2019-02-21-Angular-Cli-Library01/angular-project-lib-001.png\" alt=\"angular-project-lib-001.png\"></p>\n<pre><code class=\"hljs language-bash\">ng generate library bengis-ui --prefix=bengis\n\nCREATE projects/bengis-ui/README.md (1010 bytes)\nCREATE projects/bengis-ui/karma.conf.js (1009 bytes)\nCREATE projects/bengis-ui/ng-package.json (158 bytes)\nCREATE projects/bengis-ui/package.json (139 bytes)\nCREATE projects/bengis-ui/tsconfig.lib.json (726 bytes)\nCREATE projects/bengis-ui/tsconfig.spec.json (246 bytes)\nCREATE projects/bengis-ui/tslint.json (253 bytes)\nCREATE projects/bengis-ui/src/public_api.ts (167 bytes)\nCREATE projects/bengis-ui/src/test.ts (700 bytes)\nCREATE projects/bengis-ui/src/lib/bengis-ui.module.ts (235 bytes)\nCREATE projects/bengis-ui/src/lib/bengis-ui.component.spec.ts (643 bytes)\nCREATE projects/bengis-ui/src/lib/bengis-ui.component.ts (267 bytes)\nCREATE projects/bengis-ui/src/lib/bengis-ui.service.spec.ts (344 bytes)\nCREATE projects/bengis-ui/src/lib/bengis-ui.service.ts (137 bytes)\nUPDATE angular.json (1269 bytes)\nUPDATE package.json (1438 bytes)\nUPDATE tsconfig.json (569 bytes)</code></pre>\n<p><img src=\"/assets/2019-02-21-Angular-Cli-Library01/angular-project-lib-002.png\" alt=\"angular-project-lib-002.png\"></p>\n<ul>\n<li><code>ng generate application</code>로 프로젝트를 생성하면 app 프로젝트와 e2e 테스트가 자동으로 생성된다.</li>\n</ul>\n<pre><code class=\"hljs language-bash\">ng generate application bengis-ui-tester\n\nCREATE projects/bengis-ui-tester/src/favicon.ico (5430 bytes)\nCREATE projects/bengis-ui-tester/src/index.html (301 bytes)\nCREATE projects/bengis-ui-tester/src/main.ts (372 bytes)\nCREATE projects/bengis-ui-tester/src/polyfills.ts (2841 bytes)\nCREATE projects/bengis-ui-tester/src/styles.css (80 bytes)\nCREATE projects/bengis-ui-tester/src/test.ts (642 bytes)\nCREATE projects/bengis-ui-tester/src/assets/.gitkeep (0 bytes)\nCREATE projects/bengis-ui-tester/src/environments/environment.prod.ts (51 bytes)\nCREATE projects/bengis-ui-tester/src/environments/environment.ts (662 bytes)\nCREATE projects/bengis-ui-tester/browserslist (388 bytes)\nCREATE projects/bengis-ui-tester/karma.conf.js (1032 bytes)\nCREATE projects/bengis-ui-tester/tsconfig.app.json (172 bytes)\nCREATE projects/bengis-ui-tester/tsconfig.spec.json (270 bytes)\nCREATE projects/bengis-ui-tester/tslint.json (317 bytes)\nCREATE projects/bengis-ui-tester/src/app/app.module.ts (314 bytes)\nCREATE projects/bengis-ui-tester/src/app/app.component.css (0 bytes)\nCREATE projects/bengis-ui-tester/src/app/app.component.html (1120 bytes)\nCREATE projects/bengis-ui-tester/src/app/app.component.spec.ts (1008 bytes)\nCREATE projects/bengis-ui-tester/src/app/app.component.ts (220 bytes)\nCREATE projects/bengis-ui-tester-e2e/protractor.conf.js (752 bytes)\nCREATE projects/bengis-ui-tester-e2e/tsconfig.e2e.json (219 bytes)\nCREATE projects/bengis-ui-tester-e2e/src/app.e2e-spec.ts (645 bytes)\nCREATE projects/bengis-ui-tester-e2e/src/app.po.ts (251 bytes)\nUPDATE angular.json (5567 bytes)\nUPDATE package.json (1438 bytes)</code></pre>\n<p><img src=\"/assets/2019-02-21-Angular-Cli-Library01/angular-project-lib-003.png\" alt=\"angular-project-lib-003.png\"></p>\n<blockquote>\n<p>참고</p>\n</blockquote>\n"
  },
  {
    "data": {
      "title": "Angular Cli를 기능을 활용하여 라이브러리 만들기-3",
      "date": "2019-02-22T00:37:00.000Z",
      "category": "Angular",
      "tags": [
        "Angular",
        "library"
      ]
    },
    "content": "\r\n# Angular Cli를 기능을 활용하여 라이브러리 만들기-3 | BangLog\r\n\r\n[https://byeonggi.github.io/blog/angular-cli%EB%A5%BC-%EA%B8%B0%EB%8A%A5%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0-3](https://byeonggi.github.io/blog/angular-cli%EB%A5%BC-%EA%B8%B0%EB%8A%A5%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0-3)\r\n\r\n- \r\n\r\n    기본적으로 공개 Repo는 무료이다. (Private Repo는 유료다.)\r\n\r\n![npm-login.png](/assets/2019-02-21-Angular-Cli-Library03/npm-login.png)\r\n\r\n![npm-whoami.png](/assets/2019-02-21-Angular-Cli-Library03/npm-whoami.png)\r\n\r\n- ReadMe.md , LICENSE 파일 추가한다.\r\n\r\n![readme-license-add.png](/assets/2019-02-21-Angular-Cli-Library03/readme-license-add.png)\r\n\r\n- \r\n\r\n    빌드시에 자동으로 ReadMe.md , LICENSE 파일이 복사 될수 있도록 script에 명령어를 추가하자.\r\n\r\n- \r\n\r\n    안되면 수동으로 복사하자! ^^(우분투 환경에서 돌리기 위해서 Cp 로 파일 복사를 했다.)\r\n```bash\r\n    \"scripts\" : {\r\n        \"copy-license\": \"cp ./LICENSE ./dist/bengis-ui\",\r\n        \"copy-readme\": \"cp ./README.md ./dist/bengis-ui\",\r\n        \"copy-files\": \"npm run copy-license && npm run copy-readme\"\r\n    }\r\n```\r\n- \r\n\r\n    bengis-ui Project의 package.json에 정보를 추가하자\r\n\r\n    - License\r\n    - Repository\r\n    - Description\r\n    - Key words\r\n    - Home page\r\n- \r\n\r\n    아래 처럼 추가 하였다.\r\n```json\r\n    {\r\n      \"name\": \"bengis-ui\",\r\n      \"version\": \"0.0.1\",\r\n      \"description\": \"테스트를 위해서 올린 Repo입니다.\",\r\n      \"keywords\" :[\"Angular\",\"Library\"],\r\n      \"license\": \"MIT LICENSE\",\r\n      \"repository\": {\r\n        \"type\": \"git\",\r\n        \"url\": \"https://github.com/byeonggi/bengis-ui.git\"\r\n      },\r\n      \"author\": {\r\n        \"name\": \"ByeongGiKim\",\r\n        \"email\": \"wwww3426@naver.com\"\r\n      },\r\n      \"peerDependencies\": {\r\n        \"@angular/common\": \"^7.2.0\",\r\n        \"@angular/core\": \"^7.2.0\"\r\n      }\r\n    }\r\n```\r\n- taz로 패킹된 파일을 npm에 배포해보자\r\n\r\n    npm publish ./dist/bengis-ui/bengis-ui-0.0.1.tgz\r\n\r\n> 참고",
    "name": "index.md",
    "path": "C:/PROJECT/ng-builder-markdown/markdown/2019-02-21-Angular-Cli-Library03/index.md",
    "transData": "<h1>Angular Cli를 기능을 활용하여 라이브러리 만들기-3 | BangLog</h1>\n<p><a href=\"https://byeonggi.github.io/blog/angular-cli%EB%A5%BC-%EA%B8%B0%EB%8A%A5%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0-3\">https://byeonggi.github.io/blog/angular-cli%EB%A5%BC-%EA%B8%B0%EB%8A%A5%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0-3</a></p>\n<ul>\n<li>\n<p>  기본적으로 공개 Repo는 무료이다. (Private Repo는 유료다.)</p>\n</li>\n</ul>\n<p><img src=\"/assets/2019-02-21-Angular-Cli-Library03/npm-login.png\" alt=\"npm-login.png\"></p>\n<p><img src=\"/assets/2019-02-21-Angular-Cli-Library03/npm-whoami.png\" alt=\"npm-whoami.png\"></p>\n<ul>\n<li>ReadMe.md , LICENSE 파일 추가한다.</li>\n</ul>\n<p><img src=\"/assets/2019-02-21-Angular-Cli-Library03/readme-license-add.png\" alt=\"readme-license-add.png\"></p>\n<ul>\n<li>\n<p>  빌드시에 자동으로 ReadMe.md , LICENSE 파일이 복사 될수 있도록 script에 명령어를 추가하자.</p>\n</li>\n<li>\n<p>  안되면 수동으로 복사하자! ^^(우분투 환경에서 돌리기 위해서 Cp 로 파일 복사를 했다.)</p>\n</li>\n</ul>\n<pre><code class=\"hljs language-bash\">    <span class=\"hljs-string\">\"scripts\"</span> : {\n        <span class=\"hljs-string\">\"copy-license\"</span>: <span class=\"hljs-string\">\"cp ./LICENSE ./dist/bengis-ui\"</span>,\n        <span class=\"hljs-string\">\"copy-readme\"</span>: <span class=\"hljs-string\">\"cp ./README.md ./dist/bengis-ui\"</span>,\n        <span class=\"hljs-string\">\"copy-files\"</span>: <span class=\"hljs-string\">\"npm run copy-license &#x26;&#x26; npm run copy-readme\"</span>\n    }</code></pre>\n<ul>\n<li>\n<p>  bengis-ui Project의 package.json에 정보를 추가하자</p>\n<ul>\n<li>License</li>\n<li>Repository</li>\n<li>Description</li>\n<li>Key words</li>\n<li>Home page</li>\n</ul>\n</li>\n<li>\n<p>  아래 처럼 추가 하였다.</p>\n</li>\n</ul>\n<pre><code class=\"hljs language-json\">    {\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"bengis-ui\"</span>,\n      <span class=\"hljs-attr\">\"version\"</span>: <span class=\"hljs-string\">\"0.0.1\"</span>,\n      <span class=\"hljs-attr\">\"description\"</span>: <span class=\"hljs-string\">\"테스트를 위해서 올린 Repo입니다.\"</span>,\n      <span class=\"hljs-attr\">\"keywords\"</span> :[<span class=\"hljs-string\">\"Angular\"</span>,<span class=\"hljs-string\">\"Library\"</span>],\n      <span class=\"hljs-attr\">\"license\"</span>: <span class=\"hljs-string\">\"MIT LICENSE\"</span>,\n      <span class=\"hljs-attr\">\"repository\"</span>: {\n        <span class=\"hljs-attr\">\"type\"</span>: <span class=\"hljs-string\">\"git\"</span>,\n        <span class=\"hljs-attr\">\"url\"</span>: <span class=\"hljs-string\">\"https://github.com/byeonggi/bengis-ui.git\"</span>\n      },\n      <span class=\"hljs-attr\">\"author\"</span>: {\n        <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\">\"ByeongGiKim\"</span>,\n        <span class=\"hljs-attr\">\"email\"</span>: <span class=\"hljs-string\">\"wwww3426@naver.com\"</span>\n      },\n      <span class=\"hljs-attr\">\"peerDependencies\"</span>: {\n        <span class=\"hljs-attr\">\"@angular/common\"</span>: <span class=\"hljs-string\">\"^7.2.0\"</span>,\n        <span class=\"hljs-attr\">\"@angular/core\"</span>: <span class=\"hljs-string\">\"^7.2.0\"</span>\n      }\n    }</code></pre>\n<ul>\n<li>\n<p>taz로 패킹된 파일을 npm에 배포해보자</p>\n<p>  npm publish ./dist/bengis-ui/bengis-ui-0.0.1.tgz</p>\n</li>\n</ul>\n<blockquote>\n<p>참고</p>\n</blockquote>\n"
  }
]